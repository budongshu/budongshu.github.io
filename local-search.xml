<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo 小白搭建自己个人博客</title>
    <link href="/2020/11/26/hexo%20%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/11/26/hexo%20%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>通过hexo 可以搭建属于的免费博客，不需要敲代码，不需要花钱，并且还很好看，但是需要稍稍花上一点时间，当然只要按照文档，一步一步操作，就可以收获属于自己的博客啦</p><p>需要的工具介绍</p><p><code>nodejs</code>: 包含俩个命令 <code>node</code> <code>npm</code></p><p><code>hexo</code>: 快速、简洁且高效的博客框架,支持markdown 插件和扩展性很好</p><p><code>git</code>：需要安装git 通过git 命令来操作github </p><p><code>github</code>账号：申请注册一个github账号，github提供了一个github pages功能可以支持站点</p><p>软件版本： </p><p><code>nodejs</code>： v12.20.0 建立使用这个版本，最新版本使用hexo的时候，可能会有bug</p><h3 id="开始搭建并部署博客"><a href="#开始搭建并部署博客" class="headerlink" title="开始搭建并部署博客"></a>开始搭建并部署博客</h3><h4 id="nodejs-操作"><a href="#nodejs-操作" class="headerlink" title="nodejs 操作"></a>nodejs 操作</h4><h5 id="windows-用户-安装nodejs"><a href="#windows-用户-安装nodejs" class="headerlink" title="windows 用户 安装nodejs"></a>windows 用户 安装nodejs</h5><blockquote><p> windows用户这里需要安装git来操作</p></blockquote><p>Git的官方下载地址：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> </p><p>下载完成之后点击安装，然后通过打开Git Bash 这个软件来敲下面的命令</p><p><strong>临时更换npm 源 (为了后面快速下载安装hexo，更换为国内的源)</strong></p><pre><code class="hljs arduino">npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span>npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">get</span> registry看看终端显示信息，如果看到这行信息，说明配置成功: https:<span class="hljs-comment">//registry.npm.taobao.org/</span></code></pre><h5 id="mac-用户-打开终端-安装nodejs"><a href="#mac-用户-打开终端-安装nodejs" class="headerlink" title="mac 用户 打开终端 安装nodejs"></a>mac 用户 打开终端 安装nodejs</h5><p><strong>下载安装 然后通过命令检测下安装版本</strong></p><p>下载地址： <a href="https://npm.taobao.org/mirrors/node/v12.20.0/">https://npm.taobao.org/mirrors/node/v12.20.0/</a></p><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> node -v</span>v12.20.0(base)<span class="hljs-meta">$</span><span class="bash"> npm -v</span>6.14.8</code></pre><p><strong>临时更换npm 源 (为了后面快速下载安装hexo，更换为国内的源)</strong></p><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org</span><span class="hljs-meta">$</span><span class="bash"> npm config get registry</span>https://registry.npm.taobao.org/</code></pre><h4 id="hexo-操作"><a href="#hexo-操作" class="headerlink" title="hexo 操作"></a>hexo 操作</h4><h5 id="windows用户-安装初始化hexo"><a href="#windows用户-安装初始化hexo" class="headerlink" title="windows用户 安装初始化hexo"></a>windows用户 安装初始化hexo</h5><blockquote><p> 通过npm来安装hexo，下面前俩个命令安装需要一点时间，blog目录就是博客目录，根据自己情况选择目录</p></blockquote><pre><code class="hljs shell">npm install hexo-cli -g  hexo init blog            cd blognpm install       hexo server</code></pre><p>然后会看到这样的信息</p><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span>  Validating config<span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.</code></pre><p>本地访问<a href="http://localhost:4000/">http://localhost:4000</a> 就可以看到博客网站了</p><h5 id="mac-用户-打开终端-安装初始化hexo"><a href="#mac-用户-打开终端-安装初始化hexo" class="headerlink" title="mac 用户 打开终端 安装初始化hexo"></a>mac 用户 打开终端 安装初始化hexo</h5><blockquote><p> 通过npm来安装hexo(mac用户加上sudo),下面前俩个命令安装需要一点时间，blog目录就是博客目录,根据自己情况选择目录</p></blockquote><pre><code class="hljs shell">sudo npm install hexo-cli -g  #安装需要一点时间hexo init blog   #hexo 初始化安装 需要一点时间 这个blog以后就是自己的博客目录啦 文章都会放在这里面cd blog          #进入博客目录npm install      #npm 安装一些插件hexo server      #启动hexo服务INFO  Validating configINFO  Start processingINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></pre><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126122858805.png" alt="image-20201126122858805"></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126122742048.png" alt="image-20201126122742048"></p><p>本地访问<a href="http://localhost:4000/">http://localhost:4000</a> 就可以看到博客网站了</p><p><strong>注意： 后面不在区分windows和 mac 用户，只要是敲命令的操作，命令都是通用的，命令不要敲错就OK。</strong></p><p>至此，你本地的博客就已经搭建成功，接下来就是部署到 Github Page 了</p><h4 id="github-操作"><a href="#github-操作" class="headerlink" title="github 操作"></a>github 操作</h4><h5 id="github-申请账号注册"><a href="#github-申请账号注册" class="headerlink" title="github 申请账号注册"></a>github 申请账号注册</h5><p>github 注册地址： <a href="https://github.com/join?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=/&amp;source=header-home">https://github.com/join?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F&amp;source=header-home</a></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126113312838.png" alt="image-20201126113312838"></p><h5 id="github-登录-新建仓库"><a href="#github-登录-新建仓库" class="headerlink" title="github 登录 新建仓库"></a><strong>github 登录 新建仓库</strong></h5><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126113604379.png" alt="image-20201126113604379"></p><p><strong>github 只能是托管同名代码下 一个静态站点</strong></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126114123119.png" alt="image-20201126114123119"></p><p><strong>这里要注意： 我们要更改下默认仓库分支名字 由 main 改为master</strong> </p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126133223895.png" alt="image-20201126133223895"></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126133359800.png" alt="image-20201126133359800"></p><p>然后打开仓库创建一个 index.html 文件，并随意先写点内容，比如 <h1> 你能看到我 说明部署成功~</h1></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126114759280.png" alt="image-20201126114759280"></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126115032215.png" alt="image-20201126115032215"></p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126115049350.png" alt="image-20201126115049350"></p><p>这个时候打开 <a href="http://你的用户名.github.io/">http://你的用户名.github.io</a> 就可以看到你的站点啦，是不是很简单！index.html 内容只是暂时的预览效果，后面把 Hexo 的文件部署上去就可以在 <a href="http://你的用户名.github.io/">http://你的用户名.github.io</a> 看到你自己的博客啦！ 比如我的就是 <a href="http://budongshu.github.io/">http://budongshu.github.io</a> 了。</p><p>![image-20201126115126800](<a href="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126115126800.png">https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126115126800.png</a></p><h4 id="配置-SSH-key"><a href="#配置-SSH-key" class="headerlink" title="配置 SSH key"></a>配置 SSH key</h4><p>首先windows用户打开Git-Bash工具 mac 用户打开终端 操作命令都是一样的</p><p>执行以下命令全局配置一下本地账户</p><pre><code class="hljs shell">git config --global user.name &quot;用户名&quot;git config --global user.email &quot;邮箱地址&quot;</code></pre><p>生成一对密钥 SSH key</p><pre><code class="hljs shell">ssh-keygen -t rsa</code></pre><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126120840429.png" alt="image-20201126120840429"></p><p>首次使用还需要确认并添加主机到本机ssh 信任列表 下面可以看到success 返回成功</p><pre><code class="hljs shell">ssh -T git@github.com</code></pre><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126121227120.png" alt="image-20201126121227120"></p><p>查看刚刚生成公钥 最后要把这个公钥复制粘贴到github上去</p><pre><code class="hljs shell">cat ~/.ssh/id_rsa.pub</code></pre><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126121614857.png" alt="image-20201126121614857"></p><p>然后登录github 在github 上添加刚刚生成的ssh key 把公钥复制粘贴上去</p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126121337851.png" alt="image-20201126121337851"></p><p>创建一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认创建，搞定！！这样在你的 SSH keys 列表里就会看到你刚刚添加的密钥</p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126121412755.png" alt="image-20201126121412755"></p><h4 id="部署到github-仓库"><a href="#部署到github-仓库" class="headerlink" title="部署到github 仓库"></a>部署到github 仓库</h4><p>这个时候我们把本地hexo 和github pages部署已经完成了，接下来我们要把本地的hexo静态站点部署到github pages中，然后通过github pages 我们就可以在互联网上浏览到博客了。</p><p>部署之前需要更改hexo 配置 和安装部署插件</p><p>第一: 进入blog 目录，打开仓库_config.yml 配置文件，拉到文件末尾，填上如下配置（也可同时部署到多个仓库，比如也可以支持gitee ）：</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 注意: 这个文件是有格式的，不同层级按照缩进俩个空格，比如： 下面github 根据上面repo 就是俩个空格</span><span class="hljs-meta">#</span><span class="bash"> Deployment</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Docs: https://hexo.io/docs/one-command-deployment</span></span>deploy:  type: git  branch: main  repo:     github: https://github.com/budongshu/budongshu.github.io.git #仓库名字改成自己的</code></pre><p>第二: 要安装一个部署插件 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></p><pre><code class="hljs shell">npm install hexo-deployer-git --save</code></pre><p>第三: 最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：</p><pre><code class="hljs shell">hexo g -d</code></pre><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126123828399.png" alt="image-20201126123828399"></p><p>稍等一会，在浏览器访问网址： <a href="https://你的用户名.github.io/">https://你的用户名.github.io</a> 就会看到你的博客 </p><h4 id="hexo-命令"><a href="#hexo-命令" class="headerlink" title="hexo 命令"></a>hexo 命令</h4><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">hexo clean</td><td align="left">清除所有生成的页面文件</td></tr><tr><td align="left">hexo g</td><td align="left">生成页面</td></tr><tr><td align="left">hexo deploy</td><td align="left">推送部署到远程服务器</td></tr><tr><td align="left">hexo n xxx</td><td align="left">新建一篇名为xxx的文章</td></tr></tbody></table><p>写一遍博客 发布到网上</p><pre><code class="hljs shell">hexo new &#x27;第一遍文章&#x27;</code></pre><p>执行完成后可以在 /source/_posts 下看到一个“<code>第一遍文章.md</code>” 的文章文件 .md 就是 Markdown 格式的文件 </p><p>具体用法可以在网上找一下，语法还是比较简单的。</p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126135451904.png" alt="image-20201126135451904"></p><p>然后按照markdown语法 编辑<code>第一遍文章.md</code> ，推荐markdown 工具: <code>Typora</code> 进行编辑</p><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126135355292.png" alt="image-20201126135355292"></p><p>编辑完成保存，然后进行发布，注意： 一定要在blog目录下执行命令</p><pre><code class="hljs shell">cd ~/blog hexo clean &amp;&amp; hexo g -d</code></pre><p><img src="https://gitee.com/budongshu/blogimg/raw/master/img/image-20201126135245477.png" alt="image-20201126135245477"></p><p>更换主题fluid </p><pre><code class="hljs shell">cd ~/bloggit clone https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid</code></pre><p>在_config.yml 配置文件中，替换theme 参数，我们 把原来的注释掉加#，然后新增一行theme:  fluid</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Extensions</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Plugins: https://hexo.io/plugins/</span></span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Themes: https://hexo.io/themes/</span></span><span class="hljs-meta">#</span><span class="bash">theme: landscape</span>theme: fluid</code></pre><p>配置主题fluid </p><p>新建about 关于页面</p><pre><code class="hljs shell">hexo new page about</code></pre><p>随便编写介绍自己的about 页面内容</p><pre><code class="hljs shell">---title: aboutdate: 2020-11-26 16:47:37layout: about---`email`: bdstravel@126.com</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>hexo,blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello</title>
    <link href="/2020/11/26/hello/"/>
    <url>/2020/11/26/hello/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
